
Vagrant.configure("2") do |config|

  config.vm.define "ts.elastic", primary: true do |cfg|
    cfg.vm.box = "bento/ubuntu-20.04"
    #cfg.vm.box = "bento/rockylinux-9"
    #cfg.vm.box_version = "1.2.0"
    cfg.vm.hostname = "elastic"
    cfg.disksize.size = "256GB"
    cfg.vm.synced_folder '.', '/vagrant', disabled: false
    cfg.vm.network "private_network", ip: "192.168.56.10", auto_config: true
    cfg.vm.network "forwarded_port", guest: 5601, host: 5601
    cfg.vm.network "forwarded_port", guest: 9200, host: 9200
    cfg.vm.provider :virtualbox do |vb|
      vb.name = "ts.elastomic"
      vb.memory = 4096
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end

    # Grow the disk
    cfg.vm.provision "setup-disk", type: "shell", path: "../vagrant/scripts/setup-disk.sh"

    # Enable PowerShell
    cfg.vm.provision "enable-psremoting", type: "shell", path: "../vagrant/scripts/enable-psremoting.sh"
    # Install Atomic Red Team
    cfg.vm.provision "install atomic-redteam", type: "shell", path: "../vagrant/scripts/install-atomicredteam.ps1"
    # Download and Start Container Project
    cfg.vm.provision "download_container-project", type: "shell", path: "../vagrant/scripts/download-elastic-containers.sh"


    # Setup the Elastic Stack
    cfg.vm.provision "shell" do |s2|
      s2.path = "../vagrant/scripts/setup-elastic.sh"
      s2.env = {
        "ELASTIC_STACK_VERSION" => "8.11.0",
        "KIBANA_URL" => "https://192.168.56.10:5601",
        "KIBANA_AUTH" => "elastic:vagrant",
        "ELASTICSEARCH_URL" => "https://192.168.56.10:9200",
        "FLEET_SERVER_URL" => "https://192.168.56.10:8220"
      }
    end
  end



  config.vm.define "ts.windows10" do |cfg|
    cfg.vm.box = "gusztavvargadr/windows-10"
    cfg.vm.box_version = "2202.0.2308"
    cfg.vm.hostname = "windows10"

    cfg.vm.network "private_network", ip: "192.168.56.11", auto_config: true

    config.vm.network "forwarded_port", guest: 3389, host: 33389, auto_correct: true
    config.vm.network "forwarded_port", guest: 5985, host: 55985, auto_correct: true
    
    cfg.vm.provider :virtualbox do |vb|
      vb.name = "ts.windows10"
      vb.memory = 2048
      vb.cpus = 2
    end

    cfg.vm.provision "exprfix", type: "shell", path: "../vagrant/scripts/fix-windows-expiration.ps1"
    cfg.vm.provision "install-chocolatey", type: "shell", path: "../vagrant/scripts/install-choco.ps1"
    cfg.vm.provision "install-pwshssh", type: "shell", path: "../vagrant/scripts/install-pwshssh.ps1"
    #cfg.vm.provision "shutup10", type: "shell", path: "../vagrant/scripts/install-shutup10config.ps1"
    cfg.vm.provision "shell" do |s|
      s.path = "../vagrant/scripts/install-ea.ps1"
      s.env = {
        "ELASTIC_STACK_VERSION" => '8.11.0',
        "KIBANA_URL" => 'https://192.168.56.10:5601',
        "KIBANA_AUTH" => 'elastic:vagrant',
        "ELASTICSEARCH_URL" => 'https://192.168.56.10:9200',
        "FLEET_SERVER_URL" => 'https://192.168.56.10:8220'
      }
    end
  end



  config.vm.define "ts.ubuntu20.04" do |cfg|
    #cfg.vm.box = "bento/rockylinux-9"
    cfg.vm.box = "bento/ubuntu-20.04"
    #cfg.vm.box_version = "1.2.0"
    cfg.vm.hostname = "ubuntu20.04"
    cfg.vm.synced_folder '.', '/vagrant', disabled: true
    cfg.vm.network "private_network", ip: "192.168.56.12", auto_config: true
    cfg.vm.network "forwarded_port", guest: 80, host: 8080
    cfg.vm.provider :virtualbox do |vb|
      vb.name = "ts.ubuntu20.04"
      vb.memory = 1024
      vb.cpus = 1
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end

    # Enable PowerShell Remoting

    cfg.vm.provision "enable-psremoting", type: "shell", path: "../vagrant/scripts/enable-psremoting.sh"

    # Install and Enroll Elastic Agent
    cfg.vm.provision "shell" do |s|
      s.path = "../vagrant/scripts/install-ea-linux.sh"
      s.env = {
        "ELASTIC_STACK_VERSION" => "8.11.0",
        "KIBANA_URL" => "https://192.168.56.10:5601",
        "KIBANA_AUTH" => "elastic:vagrant",
        "ELASTICSEARCH_URL" => "https://192.168.56.10:9200",
        "FLEET_SERVER_URL" => "https://192.168.56.10:8220"
      }
    end
  end
end
